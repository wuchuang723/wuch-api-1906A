{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "base = <tool.base_ui.BaseUI object at 0x03074610>\n\n    @allure.feature(\"添加商品分类\")\n    def test_login(base):\n        #打开登录界面 http://qa.yansl.com/#/login\n        base.get(\"打开登录界面\",'http://qa.yansl.com/#/login')\n        #输入用户名 //input[@type=\"text\"]\n        base.send_keys('输入用户名','''//input[@type=\"text\"]''','admin')\n        #输入密码 //input[@type=\"password\"]\n        base.send_keys('输入密码','''//input[@type=\"password\"]''','123456')\n        #点击登录 //span[contains(text(),'登录')]\n        base.click('点击登录','''//span[contains(text(),'登录')]''')\n        try:\n            #残忍决绝 //span[text()='残忍拒绝']\n            base.click('残忍拒绝','''//span[text()='残忍拒绝']''')\n            #再次登录 //span[contains(text(),'登录')]\n            base.click('点击登录', '''//span[contains(text(),'登录')]''')\n        except:\n            pass\n        #断言方法1\n        # f = False\n        # try:\n        #     base.local_element(\"//span[text()='首页']\")\n        #     f = True\n        # except:\n        #     pass\n        # assert_tool.assert_equal(f,True)\n        # with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(f,True)):pass\n        #断言方法2\n        # page_source = base.driver.page_source\n        # with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(page_source,'首页')):pass\n        # assert_tool.assert_in(page_source,'首页')\n        #点击下拉菜单 //div[@class=\"hamburger-container\"]/*[name()='svg']\n        #断言方法3\n        page_source = base.driver.page_source\n        with allure.step(\"登录跳转页面断言\"):\n            allure.attach(page_source,\"实际结果\",allure.attachment_type.TEXT)\n            allure.attach('首页','预期结果',allure.attachment_type.TEXT)\n    \n        base.click('点击下拉菜单','''//div[@class=\"hamburger-container\"]/*[name()='svg']''')\n        sleep(2)\n        #点击商品按钮 (//div[@class=\"el-submenu__title\"])[1]\n        base.click('点击商品按钮','''(//div[@class=\"el-submenu__title\"])[1]''')\n        sleep(2)\n        #点击添加商品 //span[text()='添加商品']\n        base.click('点击添加商品','''//span[text()='添加商品']''')\n        sleep(2)\n        #点击商品分类下拉框 //span[@class=\"el-cascader__label\"]\n>       base.click('点击商品分类下拉框','''//span[@class=\"el-cascader__label\"]''')\n\ntest_case\\ui\\mall\\test_mall_add_product.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntool\\base_ui.py:23: in function\n    res = func(*args, **kwargs)\ntool\\base_ui.py:80: in click\n    element = self.local_element(xpath)\ntool\\base_ui.py:44: in local_element\n    return WebDriverWait(self.driver, 5, 0.5).until(EC.presence_of_element_located((By.XPATH, xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7bb1e81e01f11e73d2eea399e55b95a1\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x03A18A30>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "登录跳转页面断言", "status": "passed", "attachments": [{"name": "实际结果", "source": "4344bfd7-d286-4735-ae1f-d5eede670da5-attachment.txt", "type": "text/plain"}, {"name": "预期结果", "source": "b01a8dba-2fc2-4a88-98e9-38c947b6c44b-attachment.txt", "type": "text/plain"}], "start": 1564627660967, "stop": 1564627660969}], "attachments": [{"name": "打开登录界面之前", "source": "4b6af463-566e-4c13-9005-97f5d84fbc34-attachment.png", "type": "image/png"}, {"name": "打开登录界面之后", "source": "43f18497-8070-4b20-b76b-861685cc9646-attachment.png", "type": "image/png"}, {"name": "输入用户名之前", "source": "b063ac28-7f31-4ca2-984a-2b41d7a25779-attachment.png", "type": "image/png"}, {"name": "输入用户名之后", "source": "3d520bf3-d378-46e1-a3bc-ab02994ab888-attachment.png", "type": "image/png"}, {"name": "输入密码之前", "source": "7c023854-7e28-475b-abf0-52ad5c4e11f6-attachment.png", "type": "image/png"}, {"name": "输入密码之后", "source": "2a254eb6-275b-490c-9f5c-d5ceefd52eab-attachment.png", "type": "image/png"}, {"name": "点击登录之前", "source": "27d1b236-cd87-4d94-9140-71dfd6f6ef6e-attachment.png", "type": "image/png"}, {"name": "点击登录之后", "source": "4fe2a165-7705-4c47-adbc-793028f1f9c8-attachment.png", "type": "image/png"}, {"name": "残忍拒绝之前", "source": "e9f37309-3695-4c4c-952c-510d1aa12374-attachment.png", "type": "image/png"}, {"name": "残忍拒绝之后", "source": "ea337202-7536-420e-8ed6-654d88fa916a-attachment.png", "type": "image/png"}, {"name": "点击登录之前", "source": "0abad333-3a3d-4129-af6f-7492a24f45e4-attachment.png", "type": "image/png"}, {"name": "点击登录之后", "source": "c9cff7a0-2aca-4d1a-8f0e-db83cc9d9caf-attachment.png", "type": "image/png"}, {"name": "点击下拉菜单之前", "source": "2bab0d48-cb3b-49f2-ba5e-faf41b17943d-attachment.png", "type": "image/png"}, {"name": "点击下拉菜单之后", "source": "07c6c9c1-9ad2-4497-847b-158f5287ad4b-attachment.png", "type": "image/png"}, {"name": "点击商品按钮之前", "source": "89cffe70-6cb3-4c8d-abbe-9ec1c6472ea4-attachment.png", "type": "image/png"}, {"name": "点击商品按钮之后", "source": "4e4a1316-3c2d-4c4b-a4a3-968de1e2066c-attachment.png", "type": "image/png"}, {"name": "点击添加商品之前", "source": "1385fd2e-5446-4270-8d30-7e8f3b6591de-attachment.png", "type": "image/png"}, {"name": "点击添加商品之后", "source": "0d1ed3ff-c6d6-4248-a6b8-3e09b230978f-attachment.png", "type": "image/png"}, {"name": "点击商品分类下拉框之前", "source": "a4bd6657-0053-4138-835c-88ff1c167da4-attachment.png", "type": "image/png"}, {"name": "点击商品分类下拉框之后", "source": "6e817f63-77db-4d30-89a0-99558a922bfb-attachment.png", "type": "image/png"}], "start": 1564627649811, "stop": 1564627696850, "uuid": "a0e4b5f5-a6c5-4f09-9c6e-e32df991e30f", "historyId": "1e4f0ee6a197a107933520eb8c59efa0", "fullName": "test_case.ui.mall.test_mall_add_product#test_login", "labels": [{"name": "feature", "value": "添加商品分类"}, {"name": "parentSuite", "value": "test_case.ui.mall"}, {"name": "suite", "value": "test_mall_add_product"}, {"name": "subSuite"}, {"name": "host", "value": "SKY-20190318SJZ"}, {"name": "thread", "value": "7812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.ui.mall.test_mall_add_product"}]}