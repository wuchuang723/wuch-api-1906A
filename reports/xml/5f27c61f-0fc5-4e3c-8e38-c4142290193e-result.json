{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nMessage: unexpected alert open\n  (Session info: chrome=75.0.3770.142)", "trace": "base = <tool.base_ui.BaseUI object at 0x03073670>\n\n    @allure.feature(\"添加商品分类\")\n    def test_login(base):\n        #打开登录界面 http://qa.yansl.com/#/login\n        base.get(\"打开登录界面\",'http://qa.yansl.com/#/login')\n        #输入用户名 //input[@type=\"text\"]\n        base.send_keys('输入用户名','''//input[@type=\"text\"]''','admin')\n        #输入密码 //input[@type=\"password\"]\n        base.send_keys('输入密码','''//input[@type=\"password\"]''','123456')\n        #点击登录 //span[contains(text(),'登录')]\n        base.click('点击登录','''//span[contains(text(),'登录')]''')\n        #残忍决绝 //span[text()='残忍拒绝']\n        base.click('残忍拒绝','''//span[text()='残忍拒绝']''')\n        #再次登录 //span[contains(text(),'登录')]\n        base.click('点击登录', '''//span[contains(text(),'登录')]''')\n        sleep(2)\n        #断言\n        f = False\n        try:\n            base.local_element(\"//span[text()='首页']\")\n            f = True\n        except:\n            pass\n        assert_tool.assert_equal(f,True)\n        with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(f,True)):pass\n        #断言，页面跳转至首页\n        # page_source = base.driver.page_source\n        # with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(page_source,'首页')):pass\n        # assert_tool.assert_in(page_source,'首页')\n        #点击下拉菜单 //div[@class=\"hamburger-container\"]/*[name()='svg']\n        base.click('点击下拉菜单','''//div[@class=\"hamburger-container\"]/*[name()='svg']''')\n        sleep(2)\n        #点击商品按钮 (//div[@class=\"el-submenu__title\"])[1]\n        base.click('点击商品按钮','''(//div[@class=\"el-submenu__title\"])[1]''')\n        sleep(2)\n        #点击添加商品 //span[text()='添加商品']\n        base.click('点击添加商品','''//span[text()='添加商品']''')\n        sleep(2)\n        #点击商品分类下拉框 //span[@class=\"el-cascader__label\"]\n        base.click('点击商品分类下拉框','''//span[@class=\"el-cascader__label\"]''')\n        #选择服装 //li[text()='服装']\n        base.click('选择服装','''//li[text()='服装']''')\n        #选择外套 //li[text()='外套']\n        base.click('选择外套','''//li[text()='外套']''')\n        #输入商品名称 //label[contains(text(),'商品名称')]/..//input\n        base.send_keys('输入商品名称','''//label[contains(text(),'商品名称')]/..//input''','不能说的秘密')\n        # 输入副标题 //label[contains(text(),'副标题')]/..//input\n        base.send_keys('输入副标题', '''//label[contains(text(),'副标题')]/..//input''', '青春帅气')\n        #选择商品品牌 //input[@placeholder=\"请选择品牌\"]\n        base.click('选择商品品牌','''//input[@placeholder=\"请选择品牌\"]''')\n        #选择海澜之家 //span[text()='海澜之家']\n        base.click('选择海澜之家','''//span[text()='海澜之家']''')\n        #点击“下一步，填写商品促销” //span[text()='下一步，填写商品促销']\n        base.click('点击“下一步，填写商品促销”','''//span[text()='下一步，填写商品促销']''')\n    \n        # 点击“下一步，填写商品属性” //span[text()='下一步，填写商品属性']\n        base.click('点击“下一步，填写商品属性”', '''//span[text()='下一步，填写商品属性']''')\n    \n        #滚动窗口\n        base.scroll_screen(\"滚动窗口\")\n        #窗口切换至iframe\n        base.switch_to_frame('窗口切换至iframe','''(//iframe)[1]''')\n        #输入电脑端详情\n        base.send_keys('输入电脑端详情','''//body''','清仓大甩卖')\n        #切出iframe\n        base.switch_to_content('切出iframe')\n    \n        # 点击“下一步，选择商品关联” //span[text()='下一步，选择商品关联']\n        base.click('点击“下一步，选择商品关联”', '''//span[text()='下一步，选择商品关联']''')\n    \n        # 点击“完成，提交商品” //span[text()='完成，提交商品']\n        base.click('点击“完成，提交商品”', '''//span[text()='完成，提交商品']''')\n    \n        # 点击“确认” (//button/span)[last()]\n>       base.click('点击“确认”', '''(//button/span)[last()]''')\n\ntest_case\\ui\\mall\\test_mall_add_product.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntool\\base_ui.py:30: in function\n    allure.attach(args[0].driver.get_screenshot_as_png(), args[1] + '之后', allure.attachment_type.PNG)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1064: in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1074: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x03A29AD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open\\\\n  (Session info...x7654336A+18]\\\\n\\\\tRtlInitializeExceptionChain [0x773A9902+99]\\\\n\\\\tRtlInitializeExceptionChain [0x773A98D5+54]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n>           raise exception_class(message, screen, stacktrace, alert_text)\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nE           Message: unexpected alert open\nE             (Session info: chrome=75.0.3770.142)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:241: UnexpectedAlertPresentException"}, "steps": [{"name": "登录跳转页面断言：实际结果：True,预期结果：True", "status": "passed", "start": 1564625941680, "stop": 1564625941680}], "attachments": [{"name": "打开登录界面之前", "source": "dca209ec-7b6b-4844-ad39-a801c823003b-attachment.png", "type": "image/png"}, {"name": "打开登录界面之后", "source": "5ccbb872-ca6d-4ef8-ab26-46abfa3a1333-attachment.png", "type": "image/png"}, {"name": "输入用户名之前", "source": "4c933a6c-1d92-4a2c-9c24-5df3c9e4904b-attachment.png", "type": "image/png"}, {"name": "输入用户名之后", "source": "0fb64000-b36e-4a52-9a87-64325336bded-attachment.png", "type": "image/png"}, {"name": "输入密码之前", "source": "0184e69a-a131-4aba-973e-47e8a203ab5c-attachment.png", "type": "image/png"}, {"name": "输入密码之后", "source": "5ab91dad-a4ef-4771-a927-6c1339ec2e2e-attachment.png", "type": "image/png"}, {"name": "点击登录之前", "source": "4e060765-6334-4bd6-935a-7a0531cdc1e0-attachment.png", "type": "image/png"}, {"name": "点击登录之后", "source": "6644d982-b4f1-4f35-8c76-c4dee0200743-attachment.png", "type": "image/png"}, {"name": "残忍拒绝之前", "source": "ff0921e7-40e0-4080-ab63-4131f4e8e2e4-attachment.png", "type": "image/png"}, {"name": "残忍拒绝之后", "source": "70a92286-b50e-41d5-b2c3-cef756d7a5a0-attachment.png", "type": "image/png"}, {"name": "点击登录之前", "source": "1dc1836b-e9d5-442a-a1b4-dcc97534378d-attachment.png", "type": "image/png"}, {"name": "点击登录之后", "source": "d1837b86-5d74-4190-9375-47a546231f89-attachment.png", "type": "image/png"}, {"name": "点击下拉菜单之前", "source": "e8b10e8d-2846-40c7-8aa9-0c913a464fe6-attachment.png", "type": "image/png"}, {"name": "点击下拉菜单之后", "source": "49fdc28a-cdbb-4d25-b9e9-f09121973166-attachment.png", "type": "image/png"}, {"name": "点击商品按钮之前", "source": "1ff28e48-0f3f-4843-8c1b-0683fb4f1900-attachment.png", "type": "image/png"}, {"name": "点击商品按钮之后", "source": "a7672aea-49e0-477d-9827-3245d1d6fc0f-attachment.png", "type": "image/png"}, {"name": "点击添加商品之前", "source": "1ec257b6-ac5b-4aba-8026-5fb727749a0a-attachment.png", "type": "image/png"}, {"name": "点击添加商品之后", "source": "5a2bf680-a298-475c-82a8-c5006e6a62c5-attachment.png", "type": "image/png"}, {"name": "点击商品分类下拉框之前", "source": "2fc0a2ba-a204-48e1-9e5c-8718308d6b97-attachment.png", "type": "image/png"}, {"name": "点击商品分类下拉框之后", "source": "0437b32e-9264-404e-b445-b30a14f594b0-attachment.png", "type": "image/png"}, {"name": "选择服装之前", "source": "ad1e2ccf-31a2-4c08-8379-7830f2390a13-attachment.png", "type": "image/png"}, {"name": "选择服装之后", "source": "ce1b5c47-4003-46fe-b960-7fcaabe1d2d2-attachment.png", "type": "image/png"}, {"name": "选择外套之前", "source": "76955579-1b06-4078-90ba-c8ba68b52213-attachment.png", "type": "image/png"}, {"name": "选择外套之后", "source": "ed22ec3a-5da9-4b2c-8c12-9fb8f74fdbf9-attachment.png", "type": "image/png"}, {"name": "输入商品名称之前", "source": "80ce35a5-2f5b-497d-8f5a-1f323d38ea07-attachment.png", "type": "image/png"}, {"name": "输入商品名称之后", "source": "ab64c62e-53d7-4ea0-876d-f5995d159405-attachment.png", "type": "image/png"}, {"name": "输入副标题之前", "source": "fa154883-4219-45fe-b038-403bb583c579-attachment.png", "type": "image/png"}, {"name": "输入副标题之后", "source": "31f640bd-a310-4f3f-94fe-0e44d9f5a167-attachment.png", "type": "image/png"}, {"name": "选择商品品牌之前", "source": "9c9ab194-d0fa-4b02-9909-8c4c4a443742-attachment.png", "type": "image/png"}, {"name": "选择商品品牌之后", "source": "14a7a1eb-6673-4ad2-a39a-50a2d101b0ef-attachment.png", "type": "image/png"}, {"name": "选择海澜之家之前", "source": "d217404e-a49e-439a-8387-8114afb7ce3b-attachment.png", "type": "image/png"}, {"name": "选择海澜之家之后", "source": "daa7652f-8898-428c-99e9-a077f6ee6b08-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品促销”之前", "source": "b4aa7889-4b19-4ea8-a6be-d1c2e98469be-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品促销”之后", "source": "971c404f-234f-46f6-a53f-ccffc1186824-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品属性”之前", "source": "73de43e4-62c1-4704-b496-df71adae3400-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品属性”之后", "source": "c8cb8982-6d78-48f2-800c-1fdc96f1c0b5-attachment.png", "type": "image/png"}, {"name": "滚动窗口之前", "source": "1609fec0-4c5e-4bb1-8724-eca8240a07d1-attachment.png", "type": "image/png"}, {"name": "滚动窗口之后", "source": "da5a0874-ead3-47cb-8ae4-f113ebe3383d-attachment.png", "type": "image/png"}, {"name": "窗口切换至iframe之前", "source": "4b0a47bb-6538-434c-8ac9-a0fffd41dd03-attachment.png", "type": "image/png"}, {"name": "窗口切换至iframe之后", "source": "eac9bb41-9a6e-4e18-9ebd-a6ba94ebb6e2-attachment.png", "type": "image/png"}, {"name": "输入电脑端详情之前", "source": "6d84288e-7452-4e79-8318-d14924c5fc15-attachment.png", "type": "image/png"}, {"name": "输入电脑端详情之后", "source": "1b068f6f-8094-4b38-86cf-c69a9e083d78-attachment.png", "type": "image/png"}, {"name": "切出iframe之前", "source": "dce32a61-6cfc-4476-83ab-76a4170d7a91-attachment.png", "type": "image/png"}, {"name": "切出iframe之后", "source": "a383bf00-92a1-4bfd-997a-7c0485f2a268-attachment.png", "type": "image/png"}, {"name": "点击“下一步，选择商品关联”之前", "source": "a59266a1-3269-486a-bf0d-b5f0d5860398-attachment.png", "type": "image/png"}, {"name": "点击“下一步，选择商品关联”之后", "source": "2786fa26-2d7e-48cd-a180-12a96146331c-attachment.png", "type": "image/png"}, {"name": "点击“完成，提交商品”之前", "source": "90ac658e-9cc4-4519-92ae-30cb0f8d0f26-attachment.png", "type": "image/png"}, {"name": "点击“完成，提交商品”之后", "source": "ae2147f6-6939-463b-bd23-fe1bc4d79774-attachment.png", "type": "image/png"}, {"name": "点击“确认”之前", "source": "48bc0684-54d8-4c97-8d85-1eca0007875c-attachment.png", "type": "image/png"}], "start": 1564625929696, "stop": 1564625977002, "uuid": "30e606cc-998d-4104-a7ab-b1f8296750ac", "historyId": "1e4f0ee6a197a107933520eb8c59efa0", "fullName": "test_case.ui.mall.test_mall_add_product#test_login", "labels": [{"name": "feature", "value": "添加商品分类"}, {"name": "parentSuite", "value": "test_case.ui.mall"}, {"name": "suite", "value": "test_mall_add_product"}, {"name": "subSuite"}, {"name": "host", "value": "SKY-20190318SJZ"}, {"name": "thread", "value": "6704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.ui.mall.test_mall_add_product"}]}