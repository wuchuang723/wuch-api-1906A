{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nMessage: unexpected alert open\n  (Session info: chrome=75.0.3770.142)", "trace": "base = <tool.base_ui.BaseUI object at 0x03072610>\n\n    @allure.feature(\"添加商品分类\")\n    def test_login(base):\n        #打开登录界面 http://qa.yansl.com/#/login\n        base.get(\"打开登录界面\",'http://qa.yansl.com/#/login')\n        #输入用户名 //input[@type=\"text\"]\n        base.send_keys('输入用户名','''//input[@type=\"text\"]''','admin')\n        #输入密码 //input[@type=\"password\"]\n        base.send_keys('输入密码','''//input[@type=\"password\"]''','123456')\n        #点击登录 //span[contains(text(),'登录')]\n        base.click('点击登录','''//span[contains(text(),'登录')]''')\n        #残忍决绝 //span[text()='残忍拒绝']\n        base.click('残忍拒绝','''//span[text()='残忍拒绝']''')\n        #再次登录 //span[contains(text(),'登录')]\n        base.click('点击登录', '''//span[contains(text(),'登录')]''')\n        sleep(2)\n        #断言\n        f = False\n        try:\n            base.local_element(\"//span[text()='首页']\")\n            f = True\n        except:\n            pass\n        assert_tool.assert_equal(f,True)\n        with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(f,True)):pass\n        #断言，页面跳转至首页\n        # page_source = base.driver.page_source\n        # with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(page_source,'首页')):pass\n        # assert_tool.assert_in(page_source,'首页')\n        #点击下拉菜单 //div[@class=\"hamburger-container\"]/*[name()='svg']\n        base.click('点击下拉菜单','''//div[@class=\"hamburger-container\"]/*[name()='svg']''')\n        sleep(2)\n        #点击商品按钮 (//div[@class=\"el-submenu__title\"])[1]\n        base.click('点击商品按钮','''(//div[@class=\"el-submenu__title\"])[1]''')\n        sleep(2)\n        #点击添加商品 //span[text()='添加商品']\n        base.click('点击添加商品','''//span[text()='添加商品']''')\n        sleep(2)\n        #点击商品分类下拉框 //span[@class=\"el-cascader__label\"]\n        base.click('点击商品分类下拉框','''//span[@class=\"el-cascader__label\"]''')\n        #选择服装 //li[text()='服装']\n        base.click('选择服装','''//li[text()='服装']''')\n        #选择外套 //li[text()='外套']\n        base.click('选择外套','''//li[text()='外套']''')\n        #输入商品名称 //label[contains(text(),'商品名称')]/..//input\n        base.send_keys('输入商品名称','''//label[contains(text(),'商品名称')]/..//input''','不能说的秘密')\n        # 输入副标题 //label[contains(text(),'副标题')]/..//input\n        base.send_keys('输入副标题', '''//label[contains(text(),'副标题')]/..//input''', '青春帅气')\n        #选择商品品牌 //input[@placeholder=\"请选择品牌\"]\n        base.click('选择商品品牌','''//input[@placeholder=\"请选择品牌\"]''')\n        #选择海澜之家 //span[text()='海澜之家']\n        base.click('选择海澜之家','''//span[text()='海澜之家']''')\n        #点击“下一步，填写商品促销” //span[text()='下一步，填写商品促销']\n        base.click('点击“下一步，填写商品促销”','''//span[text()='下一步，填写商品促销']''')\n    \n        # 点击“下一步，填写商品属性” //span[text()='下一步，填写商品属性']\n        base.click('点击“下一步，填写商品属性”', '''//span[text()='下一步，填写商品属性']''')\n    \n        #滚动窗口\n        base.scroll_screen(\"滚动窗口\")\n        #窗口切换至iframe\n        base.switch_to_frame('窗口切换至iframe','''(//iframe)[1]''')\n        #输入电脑端详情\n        base.send_keys('输入电脑端详情','''//body''','清仓大甩卖')\n        #切出iframe\n        base.switch_to_content('切出iframe')\n    \n        # 点击“下一步，选择商品关联” //span[text()='下一步，选择商品关联']\n        base.click('点击“下一步，选择商品关联”', '''//span[text()='下一步，选择商品关联']''')\n    \n        # 点击“完成，提交商品” //span[text()='完成，提交商品']\n        base.click('点击“完成，提交商品”', '''//span[text()='完成，提交商品']''')\n    \n        # 点击“确认” (//button/span)[last()]\n>       base.click('点击“确认”', '''(//button/span)[last()]''')\n\ntest_case\\ui\\mall\\test_mall_add_product.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntool\\base_ui.py:30: in function\n    allure.attach(args[0].driver.get_screenshot_as_png(), args[1] + '之后', allure.attachment_type.PNG)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1064: in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1074: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x03A2A9F0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open\\\\n  (Session info...x7654336A+18]\\\\n\\\\tRtlInitializeExceptionChain [0x773A9902+99]\\\\n\\\\tRtlInitializeExceptionChain [0x773A98D5+54]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n>           raise exception_class(message, screen, stacktrace, alert_text)\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nE           Message: unexpected alert open\nE             (Session info: chrome=75.0.3770.142)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:241: UnexpectedAlertPresentException"}, "steps": [{"name": "登录跳转页面断言：实际结果：True,预期结果：True", "status": "passed", "start": 1564626083511, "stop": 1564626083511}], "attachments": [{"name": "打开登录界面之前", "source": "fec2b59b-6ee2-4210-955d-9d7606e83ec4-attachment.png", "type": "image/png"}, {"name": "打开登录界面之后", "source": "623840e7-c8a8-440a-9f1f-e6eecb7e9e15-attachment.png", "type": "image/png"}, {"name": "输入用户名之前", "source": "84e30c09-e678-4644-8a64-964d92e01c29-attachment.png", "type": "image/png"}, {"name": "输入用户名之后", "source": "1311351a-49c0-4649-979b-46a20dd7a2fe-attachment.png", "type": "image/png"}, {"name": "输入密码之前", "source": "8176ba4d-ed73-4657-919e-934d4ed5e722-attachment.png", "type": "image/png"}, {"name": "输入密码之后", "source": "73183a9f-6791-4062-86fa-8fba6324d8fd-attachment.png", "type": "image/png"}, {"name": "点击登录之前", "source": "b0a3a224-93d7-4722-b086-b87bf83c2a8b-attachment.png", "type": "image/png"}, {"name": "点击登录之后", "source": "2f1e1313-deba-4623-89b9-c21d954d83a5-attachment.png", "type": "image/png"}, {"name": "残忍拒绝之前", "source": "396b81f4-c550-493d-ac4e-8bf5ce0f9121-attachment.png", "type": "image/png"}, {"name": "残忍拒绝之后", "source": "4acf3218-78d7-4f2c-a58f-5acf2b5da8f5-attachment.png", "type": "image/png"}, {"name": "点击登录之前", "source": "001fb411-3110-46f8-8209-77701d7d0406-attachment.png", "type": "image/png"}, {"name": "点击登录之后", "source": "c5d7b58f-39af-4ea2-b3b3-45662bfe4b2a-attachment.png", "type": "image/png"}, {"name": "点击下拉菜单之前", "source": "670ba056-b5b6-4b34-a900-91ea31508fa5-attachment.png", "type": "image/png"}, {"name": "点击下拉菜单之后", "source": "8f22f6ee-2a2b-4863-9681-e871c4bdac28-attachment.png", "type": "image/png"}, {"name": "点击商品按钮之前", "source": "249535eb-7dcc-4946-ab22-c133cf50aaca-attachment.png", "type": "image/png"}, {"name": "点击商品按钮之后", "source": "41b0ff47-f52f-40a2-8e10-7c274b7631c8-attachment.png", "type": "image/png"}, {"name": "点击添加商品之前", "source": "3bbad97b-cc3b-4b5b-98a9-d88517576b8c-attachment.png", "type": "image/png"}, {"name": "点击添加商品之后", "source": "8dfc5bd6-0c25-4236-b8db-314657659eee-attachment.png", "type": "image/png"}, {"name": "点击商品分类下拉框之前", "source": "27971b9b-ded3-4bc8-b35e-770f710fbebe-attachment.png", "type": "image/png"}, {"name": "点击商品分类下拉框之后", "source": "be42f665-89bf-4d36-87df-96f649015f4a-attachment.png", "type": "image/png"}, {"name": "选择服装之前", "source": "8ff48438-dd6e-40cb-9db0-e7dce8c14100-attachment.png", "type": "image/png"}, {"name": "选择服装之后", "source": "603413ca-5086-4604-a692-0f757cad2b5b-attachment.png", "type": "image/png"}, {"name": "选择外套之前", "source": "85c45120-b85b-410c-8cf4-681fef1f2357-attachment.png", "type": "image/png"}, {"name": "选择外套之后", "source": "80abfc85-3f07-47c3-8a94-e5f1dcf484a3-attachment.png", "type": "image/png"}, {"name": "输入商品名称之前", "source": "ea8c8dd6-703a-4cd6-9207-84e954dd332c-attachment.png", "type": "image/png"}, {"name": "输入商品名称之后", "source": "8f8c91f3-8690-4b1c-bc96-d53cc2e5afda-attachment.png", "type": "image/png"}, {"name": "输入副标题之前", "source": "ffe86832-daf2-43c4-b4a3-bdd7eb3b633c-attachment.png", "type": "image/png"}, {"name": "输入副标题之后", "source": "9c53b375-a2ef-4414-8461-213f4623eca4-attachment.png", "type": "image/png"}, {"name": "选择商品品牌之前", "source": "ff667c3f-1426-453a-aed9-5275b1f054ad-attachment.png", "type": "image/png"}, {"name": "选择商品品牌之后", "source": "fada7137-ce4d-4de1-a63d-0dc142b0f244-attachment.png", "type": "image/png"}, {"name": "选择海澜之家之前", "source": "e9bc5f05-0c6a-439c-a71a-938c44951154-attachment.png", "type": "image/png"}, {"name": "选择海澜之家之后", "source": "858b376d-15be-4ee4-ab16-79dc02f7e468-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品促销”之前", "source": "079378cd-3e03-45c3-a7eb-f0d15a6f09b6-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品促销”之后", "source": "30792d20-5d67-4316-938f-4220c16b311d-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品属性”之前", "source": "afdacf44-38a4-4881-aef6-0eed33ee8bef-attachment.png", "type": "image/png"}, {"name": "点击“下一步，填写商品属性”之后", "source": "03801413-49fb-446b-9dd5-388af97c4a4d-attachment.png", "type": "image/png"}, {"name": "滚动窗口之前", "source": "2566df63-ea1b-47f3-b1bf-6147853961ef-attachment.png", "type": "image/png"}, {"name": "滚动窗口之后", "source": "f37d5627-8eb6-4146-9fad-81445734cc5e-attachment.png", "type": "image/png"}, {"name": "窗口切换至iframe之前", "source": "ffbe6459-fb2b-42c3-b8d0-80b5e0b1bc21-attachment.png", "type": "image/png"}, {"name": "窗口切换至iframe之后", "source": "ff1a8fa3-d5e3-4626-a68c-23982b6779dc-attachment.png", "type": "image/png"}, {"name": "输入电脑端详情之前", "source": "bd308c55-5be8-403a-9828-4bdbd0b17daf-attachment.png", "type": "image/png"}, {"name": "输入电脑端详情之后", "source": "504087a4-4f13-42b4-9b70-7ef6fc015407-attachment.png", "type": "image/png"}, {"name": "切出iframe之前", "source": "a66734d4-6c9f-4cde-8dc8-4cc28a8731dd-attachment.png", "type": "image/png"}, {"name": "切出iframe之后", "source": "847a5330-3d27-4f27-9eeb-d22e857a791b-attachment.png", "type": "image/png"}, {"name": "点击“下一步，选择商品关联”之前", "source": "44c044b2-f94d-4eee-b770-6a7712e4bb31-attachment.png", "type": "image/png"}, {"name": "点击“下一步，选择商品关联”之后", "source": "dcad09db-c44c-4eae-96df-2b17fd19aa89-attachment.png", "type": "image/png"}, {"name": "点击“完成，提交商品”之前", "source": "e44c5bcb-acc1-47eb-807f-97074403bd96-attachment.png", "type": "image/png"}, {"name": "点击“完成，提交商品”之后", "source": "ab3a4610-06df-4269-8feb-e2e57e6dc660-attachment.png", "type": "image/png"}, {"name": "点击“确认”之前", "source": "ea9287e3-d290-4935-aaba-d7ad6d29b588-attachment.png", "type": "image/png"}], "start": 1564626072356, "stop": 1564626118347, "uuid": "1d6e802c-7e85-4da2-9b4d-a76a94e32e94", "historyId": "1e4f0ee6a197a107933520eb8c59efa0", "fullName": "test_case.ui.mall.test_mall_add_product#test_login", "labels": [{"name": "feature", "value": "添加商品分类"}, {"name": "parentSuite", "value": "test_case.ui.mall"}, {"name": "suite", "value": "test_mall_add_product"}, {"name": "subSuite"}, {"name": "host", "value": "SKY-20190318SJZ"}, {"name": "thread", "value": "5064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.ui.mall.test_mall_add_product"}]}