{
  "uid" : "758878404df11653",
  "name" : "test_login",
  "fullName" : "test_case.ui.mall.test_mall_add_product#test_login",
  "historyId" : "1e4f0ee6a197a107933520eb8c59efa0",
  "time" : {
    "start" : 1564625929696,
    "stop" : 1564625977002,
    "duration" : 47306
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nMessage: unexpected alert open\n  (Session info: chrome=75.0.3770.142)",
  "statusTrace" : "base = <tool.base_ui.BaseUI object at 0x03073670>\n\n    @allure.feature(\"添加商品分类\")\n    def test_login(base):\n        #打开登录界面 http://qa.yansl.com/#/login\n        base.get(\"打开登录界面\",'http://qa.yansl.com/#/login')\n        #输入用户名 //input[@type=\"text\"]\n        base.send_keys('输入用户名','''//input[@type=\"text\"]''','admin')\n        #输入密码 //input[@type=\"password\"]\n        base.send_keys('输入密码','''//input[@type=\"password\"]''','123456')\n        #点击登录 //span[contains(text(),'登录')]\n        base.click('点击登录','''//span[contains(text(),'登录')]''')\n        #残忍决绝 //span[text()='残忍拒绝']\n        base.click('残忍拒绝','''//span[text()='残忍拒绝']''')\n        #再次登录 //span[contains(text(),'登录')]\n        base.click('点击登录', '''//span[contains(text(),'登录')]''')\n        sleep(2)\n        #断言\n        f = False\n        try:\n            base.local_element(\"//span[text()='首页']\")\n            f = True\n        except:\n            pass\n        assert_tool.assert_equal(f,True)\n        with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(f,True)):pass\n        #断言，页面跳转至首页\n        # page_source = base.driver.page_source\n        # with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(page_source,'首页')):pass\n        # assert_tool.assert_in(page_source,'首页')\n        #点击下拉菜单 //div[@class=\"hamburger-container\"]/*[name()='svg']\n        base.click('点击下拉菜单','''//div[@class=\"hamburger-container\"]/*[name()='svg']''')\n        sleep(2)\n        #点击商品按钮 (//div[@class=\"el-submenu__title\"])[1]\n        base.click('点击商品按钮','''(//div[@class=\"el-submenu__title\"])[1]''')\n        sleep(2)\n        #点击添加商品 //span[text()='添加商品']\n        base.click('点击添加商品','''//span[text()='添加商品']''')\n        sleep(2)\n        #点击商品分类下拉框 //span[@class=\"el-cascader__label\"]\n        base.click('点击商品分类下拉框','''//span[@class=\"el-cascader__label\"]''')\n        #选择服装 //li[text()='服装']\n        base.click('选择服装','''//li[text()='服装']''')\n        #选择外套 //li[text()='外套']\n        base.click('选择外套','''//li[text()='外套']''')\n        #输入商品名称 //label[contains(text(),'商品名称')]/..//input\n        base.send_keys('输入商品名称','''//label[contains(text(),'商品名称')]/..//input''','不能说的秘密')\n        # 输入副标题 //label[contains(text(),'副标题')]/..//input\n        base.send_keys('输入副标题', '''//label[contains(text(),'副标题')]/..//input''', '青春帅气')\n        #选择商品品牌 //input[@placeholder=\"请选择品牌\"]\n        base.click('选择商品品牌','''//input[@placeholder=\"请选择品牌\"]''')\n        #选择海澜之家 //span[text()='海澜之家']\n        base.click('选择海澜之家','''//span[text()='海澜之家']''')\n        #点击“下一步，填写商品促销” //span[text()='下一步，填写商品促销']\n        base.click('点击“下一步，填写商品促销”','''//span[text()='下一步，填写商品促销']''')\n    \n        # 点击“下一步，填写商品属性” //span[text()='下一步，填写商品属性']\n        base.click('点击“下一步，填写商品属性”', '''//span[text()='下一步，填写商品属性']''')\n    \n        #滚动窗口\n        base.scroll_screen(\"滚动窗口\")\n        #窗口切换至iframe\n        base.switch_to_frame('窗口切换至iframe','''(//iframe)[1]''')\n        #输入电脑端详情\n        base.send_keys('输入电脑端详情','''//body''','清仓大甩卖')\n        #切出iframe\n        base.switch_to_content('切出iframe')\n    \n        # 点击“下一步，选择商品关联” //span[text()='下一步，选择商品关联']\n        base.click('点击“下一步，选择商品关联”', '''//span[text()='下一步，选择商品关联']''')\n    \n        # 点击“完成，提交商品” //span[text()='完成，提交商品']\n        base.click('点击“完成，提交商品”', '''//span[text()='完成，提交商品']''')\n    \n        # 点击“确认” (//button/span)[last()]\n>       base.click('点击“确认”', '''(//button/span)[last()]''')\n\ntest_case\\ui\\mall\\test_mall_add_product.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntool\\base_ui.py:30: in function\n    allure.attach(args[0].driver.get_screenshot_as_png(), args[1] + '之后', allure.attachment_type.PNG)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1064: in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1074: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x03A29AD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open\\\\n  (Session info...x7654336A+18]\\\\n\\\\tRtlInitializeExceptionChain [0x773A9902+99]\\\\n\\\\tRtlInitializeExceptionChain [0x773A98D5+54]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n>           raise exception_class(message, screen, stacktrace, alert_text)\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nE           Message: unexpected alert open\nE             (Session info: chrome=75.0.3770.142)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:241: UnexpectedAlertPresentException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "base",
    "time" : {
      "start" : 1564625925197,
      "stop" : 1564625929694,
      "duration" : 4497
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nMessage: unexpected alert open\n  (Session info: chrome=75.0.3770.142)",
    "statusTrace" : "base = <tool.base_ui.BaseUI object at 0x03073670>\n\n    @allure.feature(\"添加商品分类\")\n    def test_login(base):\n        #打开登录界面 http://qa.yansl.com/#/login\n        base.get(\"打开登录界面\",'http://qa.yansl.com/#/login')\n        #输入用户名 //input[@type=\"text\"]\n        base.send_keys('输入用户名','''//input[@type=\"text\"]''','admin')\n        #输入密码 //input[@type=\"password\"]\n        base.send_keys('输入密码','''//input[@type=\"password\"]''','123456')\n        #点击登录 //span[contains(text(),'登录')]\n        base.click('点击登录','''//span[contains(text(),'登录')]''')\n        #残忍决绝 //span[text()='残忍拒绝']\n        base.click('残忍拒绝','''//span[text()='残忍拒绝']''')\n        #再次登录 //span[contains(text(),'登录')]\n        base.click('点击登录', '''//span[contains(text(),'登录')]''')\n        sleep(2)\n        #断言\n        f = False\n        try:\n            base.local_element(\"//span[text()='首页']\")\n            f = True\n        except:\n            pass\n        assert_tool.assert_equal(f,True)\n        with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(f,True)):pass\n        #断言，页面跳转至首页\n        # page_source = base.driver.page_source\n        # with allure.step(\"登录跳转页面断言：实际结果：{},预期结果：{}\".format(page_source,'首页')):pass\n        # assert_tool.assert_in(page_source,'首页')\n        #点击下拉菜单 //div[@class=\"hamburger-container\"]/*[name()='svg']\n        base.click('点击下拉菜单','''//div[@class=\"hamburger-container\"]/*[name()='svg']''')\n        sleep(2)\n        #点击商品按钮 (//div[@class=\"el-submenu__title\"])[1]\n        base.click('点击商品按钮','''(//div[@class=\"el-submenu__title\"])[1]''')\n        sleep(2)\n        #点击添加商品 //span[text()='添加商品']\n        base.click('点击添加商品','''//span[text()='添加商品']''')\n        sleep(2)\n        #点击商品分类下拉框 //span[@class=\"el-cascader__label\"]\n        base.click('点击商品分类下拉框','''//span[@class=\"el-cascader__label\"]''')\n        #选择服装 //li[text()='服装']\n        base.click('选择服装','''//li[text()='服装']''')\n        #选择外套 //li[text()='外套']\n        base.click('选择外套','''//li[text()='外套']''')\n        #输入商品名称 //label[contains(text(),'商品名称')]/..//input\n        base.send_keys('输入商品名称','''//label[contains(text(),'商品名称')]/..//input''','不能说的秘密')\n        # 输入副标题 //label[contains(text(),'副标题')]/..//input\n        base.send_keys('输入副标题', '''//label[contains(text(),'副标题')]/..//input''', '青春帅气')\n        #选择商品品牌 //input[@placeholder=\"请选择品牌\"]\n        base.click('选择商品品牌','''//input[@placeholder=\"请选择品牌\"]''')\n        #选择海澜之家 //span[text()='海澜之家']\n        base.click('选择海澜之家','''//span[text()='海澜之家']''')\n        #点击“下一步，填写商品促销” //span[text()='下一步，填写商品促销']\n        base.click('点击“下一步，填写商品促销”','''//span[text()='下一步，填写商品促销']''')\n    \n        # 点击“下一步，填写商品属性” //span[text()='下一步，填写商品属性']\n        base.click('点击“下一步，填写商品属性”', '''//span[text()='下一步，填写商品属性']''')\n    \n        #滚动窗口\n        base.scroll_screen(\"滚动窗口\")\n        #窗口切换至iframe\n        base.switch_to_frame('窗口切换至iframe','''(//iframe)[1]''')\n        #输入电脑端详情\n        base.send_keys('输入电脑端详情','''//body''','清仓大甩卖')\n        #切出iframe\n        base.switch_to_content('切出iframe')\n    \n        # 点击“下一步，选择商品关联” //span[text()='下一步，选择商品关联']\n        base.click('点击“下一步，选择商品关联”', '''//span[text()='下一步，选择商品关联']''')\n    \n        # 点击“完成，提交商品” //span[text()='完成，提交商品']\n        base.click('点击“完成，提交商品”', '''//span[text()='完成，提交商品']''')\n    \n        # 点击“确认” (//button/span)[last()]\n>       base.click('点击“确认”', '''(//button/span)[last()]''')\n\ntest_case\\ui\\mall\\test_mall_add_product.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntool\\base_ui.py:30: in function\n    allure.attach(args[0].driver.get_screenshot_as_png(), args[1] + '之后', allure.attachment_type.PNG)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1064: in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1074: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x03A29AD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unexpected alert open\",\"message\":\"unexpected alert open\\\\n  (Session info...x7654336A+18]\\\\n\\\\tRtlInitializeExceptionChain [0x773A9902+99]\\\\n\\\\tRtlInitializeExceptionChain [0x773A98D5+54]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n>           raise exception_class(message, screen, stacktrace, alert_text)\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None\nE           Message: unexpected alert open\nE             (Session info: chrome=75.0.3770.142)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:241: UnexpectedAlertPresentException",
    "steps" : [ {
      "name" : "登录跳转页面断言：实际结果：True,预期结果：True",
      "time" : {
        "start" : 1564625941680,
        "stop" : 1564625941680,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "e2c458991de6678a",
      "name" : "打开登录界面之前",
      "source" : "e2c458991de6678a.png",
      "type" : "image/png",
      "size" : 6428
    }, {
      "uid" : "ba22d6b2d1a5a417",
      "name" : "打开登录界面之后",
      "source" : "ba22d6b2d1a5a417.png",
      "type" : "image/png",
      "size" : 37047
    }, {
      "uid" : "91816f3f74f3a486",
      "name" : "输入用户名之前",
      "source" : "91816f3f74f3a486.png",
      "type" : "image/png",
      "size" : 37047
    }, {
      "uid" : "44d07dbc680d7ffa",
      "name" : "输入用户名之后",
      "source" : "44d07dbc680d7ffa.png",
      "type" : "image/png",
      "size" : 37072
    }, {
      "uid" : "61640027fa6fc48b",
      "name" : "输入密码之前",
      "source" : "61640027fa6fc48b.png",
      "type" : "image/png",
      "size" : 37044
    }, {
      "uid" : "1fa77c22e6fc69c4",
      "name" : "输入密码之后",
      "source" : "1fa77c22e6fc69c4.png",
      "type" : "image/png",
      "size" : 37063
    }, {
      "uid" : "2f56de74a1dbf5a7",
      "name" : "点击登录之前",
      "source" : "2f56de74a1dbf5a7.png",
      "type" : "image/png",
      "size" : 37110
    }, {
      "uid" : "73bd76fdd4a5bdc2",
      "name" : "点击登录之后",
      "source" : "73bd76fdd4a5bdc2.png",
      "type" : "image/png",
      "size" : 39807
    }, {
      "uid" : "fb1405cc1bd1bf37",
      "name" : "残忍拒绝之前",
      "source" : "fb1405cc1bd1bf37.png",
      "type" : "image/png",
      "size" : 39807
    }, {
      "uid" : "847689905ecca24b",
      "name" : "残忍拒绝之后",
      "source" : "847689905ecca24b.png",
      "type" : "image/png",
      "size" : 45031
    }, {
      "uid" : "b81422d1d581c46b",
      "name" : "点击登录之前",
      "source" : "b81422d1d581c46b.png",
      "type" : "image/png",
      "size" : 37139
    }, {
      "uid" : "fec3da71ae4db3db",
      "name" : "点击登录之后",
      "source" : "fec3da71ae4db3db.png",
      "type" : "image/png",
      "size" : 38136
    }, {
      "uid" : "5ba656e11d692f7c",
      "name" : "点击下拉菜单之前",
      "source" : "5ba656e11d692f7c.png",
      "type" : "image/png",
      "size" : 58801
    }, {
      "uid" : "d155e86d83c37ec6",
      "name" : "点击下拉菜单之后",
      "source" : "d155e86d83c37ec6.png",
      "type" : "image/png",
      "size" : 61534
    }, {
      "uid" : "c75ee2a97d91ab66",
      "name" : "点击商品按钮之前",
      "source" : "c75ee2a97d91ab66.png",
      "type" : "image/png",
      "size" : 56418
    }, {
      "uid" : "2a540d84067df6f7",
      "name" : "点击商品按钮之后",
      "source" : "2a540d84067df6f7.png",
      "type" : "image/png",
      "size" : 71247
    }, {
      "uid" : "967eda05c4c6f0d2",
      "name" : "点击添加商品之前",
      "source" : "967eda05c4c6f0d2.png",
      "type" : "image/png",
      "size" : 64702
    }, {
      "uid" : "288c11d7ea9aacb4",
      "name" : "点击添加商品之后",
      "source" : "288c11d7ea9aacb4.png",
      "type" : "image/png",
      "size" : 73727
    }, {
      "uid" : "e6a58f7ef08fd098",
      "name" : "点击商品分类下拉框之前",
      "source" : "e6a58f7ef08fd098.png",
      "type" : "image/png",
      "size" : 44348
    }, {
      "uid" : "7014a254fcd5de66",
      "name" : "点击商品分类下拉框之后",
      "source" : "7014a254fcd5de66.png",
      "type" : "image/png",
      "size" : 46020
    }, {
      "uid" : "ce232486f4535668",
      "name" : "选择服装之前",
      "source" : "ce232486f4535668.png",
      "type" : "image/png",
      "size" : 39768
    }, {
      "uid" : "771eafc57291ed64",
      "name" : "选择服装之后",
      "source" : "771eafc57291ed64.png",
      "type" : "image/png",
      "size" : 42488
    }, {
      "uid" : "edecc9123426ba5a",
      "name" : "选择外套之前",
      "source" : "edecc9123426ba5a.png",
      "type" : "image/png",
      "size" : 42488
    }, {
      "uid" : "a2ca8958e3e31147",
      "name" : "选择外套之后",
      "source" : "a2ca8958e3e31147.png",
      "type" : "image/png",
      "size" : 37107
    }, {
      "uid" : "e7a5dced10278991",
      "name" : "输入商品名称之前",
      "source" : "e7a5dced10278991.png",
      "type" : "image/png",
      "size" : 35979
    }, {
      "uid" : "e0d47b3d2888a916",
      "name" : "输入商品名称之后",
      "source" : "e0d47b3d2888a916.png",
      "type" : "image/png",
      "size" : 37340
    }, {
      "uid" : "cc9627e190ab7c6e",
      "name" : "输入副标题之前",
      "source" : "cc9627e190ab7c6e.png",
      "type" : "image/png",
      "size" : 37340
    }, {
      "uid" : "eca4c54f3e11f0db",
      "name" : "输入副标题之后",
      "source" : "eca4c54f3e11f0db.png",
      "type" : "image/png",
      "size" : 37909
    }, {
      "uid" : "ef05f74b449b740a",
      "name" : "选择商品品牌之前",
      "source" : "ef05f74b449b740a.png",
      "type" : "image/png",
      "size" : 37876
    }, {
      "uid" : "82803415936b09d",
      "name" : "选择商品品牌之后",
      "source" : "82803415936b09d.png",
      "type" : "image/png",
      "size" : 45991
    }, {
      "uid" : "97f4f847c6d930c2",
      "name" : "选择海澜之家之前",
      "source" : "97f4f847c6d930c2.png",
      "type" : "image/png",
      "size" : 41446
    }, {
      "uid" : "503b6f80bdb989f1",
      "name" : "选择海澜之家之后",
      "source" : "503b6f80bdb989f1.png",
      "type" : "image/png",
      "size" : 38449
    }, {
      "uid" : "e559f8ea5ec73ddc",
      "name" : "点击“下一步，填写商品促销”之前",
      "source" : "e559f8ea5ec73ddc.png",
      "type" : "image/png",
      "size" : 37875
    }, {
      "uid" : "be4156b3d88fd58a",
      "name" : "点击“下一步，填写商品促销”之后",
      "source" : "be4156b3d88fd58a.png",
      "type" : "image/png",
      "size" : 41708
    }, {
      "uid" : "49f3d4af37191601",
      "name" : "点击“下一步，填写商品属性”之前",
      "source" : "49f3d4af37191601.png",
      "type" : "image/png",
      "size" : 41708
    }, {
      "uid" : "3008c5194ba74055",
      "name" : "点击“下一步，填写商品属性”之后",
      "source" : "3008c5194ba74055.png",
      "type" : "image/png",
      "size" : 39253
    }, {
      "uid" : "4993e0dee06995c8",
      "name" : "滚动窗口之前",
      "source" : "4993e0dee06995c8.png",
      "type" : "image/png",
      "size" : 39253
    }, {
      "uid" : "27ae1cab001f6fa4",
      "name" : "滚动窗口之后",
      "source" : "27ae1cab001f6fa4.png",
      "type" : "image/png",
      "size" : 27371
    }, {
      "uid" : "68ee673dcfed521d",
      "name" : "窗口切换至iframe之前",
      "source" : "68ee673dcfed521d.png",
      "type" : "image/png",
      "size" : 27371
    }, {
      "uid" : "c2428cd601539528",
      "name" : "窗口切换至iframe之后",
      "source" : "c2428cd601539528.png",
      "type" : "image/png",
      "size" : 27371
    }, {
      "uid" : "4fcc59e1e1e2c254",
      "name" : "输入电脑端详情之前",
      "source" : "4fcc59e1e1e2c254.png",
      "type" : "image/png",
      "size" : 27371
    }, {
      "uid" : "e43c4bf878858492",
      "name" : "输入电脑端详情之后",
      "source" : "e43c4bf878858492.png",
      "type" : "image/png",
      "size" : 28638
    }, {
      "uid" : "81ac92c8c5912269",
      "name" : "切出iframe之前",
      "source" : "81ac92c8c5912269.png",
      "type" : "image/png",
      "size" : 28620
    }, {
      "uid" : "8eeddbc1160a217e",
      "name" : "切出iframe之后",
      "source" : "8eeddbc1160a217e.png",
      "type" : "image/png",
      "size" : 28620
    }, {
      "uid" : "7bbe0aa73737f4c4",
      "name" : "点击“下一步，选择商品关联”之前",
      "source" : "7bbe0aa73737f4c4.png",
      "type" : "image/png",
      "size" : 28641
    }, {
      "uid" : "17191fc2862ba92b",
      "name" : "点击“下一步，选择商品关联”之后",
      "source" : "17191fc2862ba92b.png",
      "type" : "image/png",
      "size" : 51464
    }, {
      "uid" : "57f6e8b8302beb0f",
      "name" : "点击“完成，提交商品”之前",
      "source" : "57f6e8b8302beb0f.png",
      "type" : "image/png",
      "size" : 51464
    }, {
      "uid" : "a361ab53821ed701",
      "name" : "点击“完成，提交商品”之后",
      "source" : "a361ab53821ed701.png",
      "type" : "image/png",
      "size" : 51261
    }, {
      "uid" : "dd91a0c0be95ba9c",
      "name" : "点击“确认”之前",
      "source" : "dd91a0c0be95ba9c.png",
      "type" : "image/png",
      "size" : 47838
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 49,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "base::0",
    "time" : {
      "start" : 1564625977245,
      "stop" : 1564625979379,
      "duration" : 2134
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "添加商品分类"
  }, {
    "name" : "parentSuite",
    "value" : "test_case.ui.mall"
  }, {
    "name" : "suite",
    "value" : "test_mall_add_product"
  }, {
    "name" : "subSuite"
  }, {
    "name" : "host",
    "value" : "SKY-20190318SJZ"
  }, {
    "name" : "thread",
    "value" : "6704-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.ui.mall.test_mall_add_product"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "758878404df11653.json",
  "parameterValues" : [ ]
}